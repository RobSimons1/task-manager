{"filter":false,"title":"app.py","tooltip":"/app.py","undoManager":{"mark":7,"position":7,"stack":[[{"start":{"row":0,"column":0},"end":{"row":6,"column":43},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'"],"id":1},{"start":{"row":0,"column":0},"end":{"row":7,"column":43},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'"]}],[{"start":{"row":10,"column":0},"end":{"row":41,"column":19},"action":"remove","lines":["mongo = PyMongo(app)","","","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","@app.route('/')","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks = mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","    ","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","        port=int(os.environ.get('PORT')),","        debug=True)"],"id":2},{"start":{"row":10,"column":0},"end":{"row":43,"column":23},"action":"insert","lines":["mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"]}],[{"start":{"row":10,"column":0},"end":{"row":43,"column":23},"action":"remove","lines":["mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":3},{"start":{"row":10,"column":0},"end":{"row":57,"column":23},"action":"insert","lines":["mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent')","    })","    return redirect(url_for('get_tasks'))","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"]}],[{"start":{"row":8,"column":52},"end":{"row":8,"column":60},"action":"remove","lines":["Ripped14"],"id":4},{"start":{"row":8,"column":52},"end":{"row":8,"column":53},"action":"insert","lines":["<"]},{"start":{"row":8,"column":53},"end":{"row":8,"column":54},"action":"insert","lines":["p"]},{"start":{"row":8,"column":54},"end":{"row":8,"column":55},"action":"insert","lines":["a"]},{"start":{"row":8,"column":55},"end":{"row":8,"column":56},"action":"insert","lines":["s"]},{"start":{"row":8,"column":56},"end":{"row":8,"column":57},"action":"insert","lines":["s"]}],[{"start":{"row":8,"column":57},"end":{"row":8,"column":58},"action":"insert","lines":["w"],"id":5},{"start":{"row":8,"column":58},"end":{"row":8,"column":59},"action":"insert","lines":["o"]},{"start":{"row":8,"column":59},"end":{"row":8,"column":60},"action":"insert","lines":["r"]},{"start":{"row":8,"column":60},"end":{"row":8,"column":61},"action":"insert","lines":["d"]},{"start":{"row":8,"column":61},"end":{"row":8,"column":62},"action":"insert","lines":[">"]}],[{"start":{"row":8,"column":52},"end":{"row":8,"column":62},"action":"remove","lines":["<password>"],"id":6},{"start":{"row":8,"column":52},"end":{"row":8,"column":53},"action":"insert","lines":["R"]},{"start":{"row":8,"column":53},"end":{"row":8,"column":54},"action":"insert","lines":["i"]},{"start":{"row":8,"column":54},"end":{"row":8,"column":55},"action":"insert","lines":["p"]},{"start":{"row":8,"column":55},"end":{"row":8,"column":56},"action":"insert","lines":["p"]},{"start":{"row":8,"column":56},"end":{"row":8,"column":57},"action":"insert","lines":["e"]},{"start":{"row":8,"column":57},"end":{"row":8,"column":58},"action":"insert","lines":["d"]},{"start":{"row":8,"column":58},"end":{"row":8,"column":59},"action":"insert","lines":["1"]},{"start":{"row":8,"column":59},"end":{"row":8,"column":60},"action":"insert","lines":["4"]}],[{"start":{"row":8,"column":52},"end":{"row":8,"column":60},"action":"remove","lines":["Ripped14"],"id":7},{"start":{"row":8,"column":52},"end":{"row":8,"column":53},"action":"insert","lines":["<"]},{"start":{"row":8,"column":53},"end":{"row":8,"column":54},"action":"insert","lines":["p"]},{"start":{"row":8,"column":54},"end":{"row":8,"column":55},"action":"insert","lines":["a"]},{"start":{"row":8,"column":55},"end":{"row":8,"column":56},"action":"insert","lines":["s"]},{"start":{"row":8,"column":56},"end":{"row":8,"column":57},"action":"insert","lines":["s"]},{"start":{"row":8,"column":57},"end":{"row":8,"column":58},"action":"insert","lines":["w"]},{"start":{"row":8,"column":58},"end":{"row":8,"column":59},"action":"insert","lines":["o"]}],[{"start":{"row":8,"column":59},"end":{"row":8,"column":60},"action":"insert","lines":["r"],"id":8},{"start":{"row":8,"column":60},"end":{"row":8,"column":61},"action":"insert","lines":["d"]},{"start":{"row":8,"column":61},"end":{"row":8,"column":62},"action":"insert","lines":[">"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":8,"column":62},"end":{"row":8,"column":62},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1571406136628,"hash":"8b17a60a91f869c9a1e5ef2f9153e2a716c8ba29"}